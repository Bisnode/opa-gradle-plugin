plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.10.0'
}

group 'com.bisnode.opa'
version '0.1.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

task createClasspathManifest {
    def outputDir = file("$buildDir/$name")
    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

dependencies {
    testCompile gradleTestKit()
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testRuntime files(createClasspathManifest)
}

sourceSets {
    functionalTest {
        java.srcDir file('src/testFunctional/java')
        resources.srcDir file('src/testFunctional/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

gradlePlugin {
    plugins {
        opa {
            id = 'com.bisnode.opa'
            implementationClass = 'com.bisnode.opa.OpaPlugin'
        }
    }
    testSourceSets sourceSets.functionalTest
}

pluginBundle {
    website = 'https://www.bisnode.com'
    vcsUrl = 'https://github.com/Bisnode/opa-gradle-plugin'
    description = 'Plugin adding various tasks to help out integrating Open Policy Agent (OPA) in Gradle builds.'
    tags = ['opa', 'openpolicyagent', 'test', 'testing', 'policy', 'policies', 'authorization']

    plugins {
        opa {
            displayName = 'Open Policy Agent plugin for Gradle'
        }
    }
}

task functionalTest(type: Test) {
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    mustRunAfter test
}
check.dependsOn functionalTest


